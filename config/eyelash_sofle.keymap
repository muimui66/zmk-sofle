#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&mt {
    tapping-term-ms = <300>;
    flavor = "tap-preferred";
};

&lt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    caps_layer3: caps_layer3 {
        compatible = "zmk,behavior-hold-tap";
        label = "CAPS_LAYER3";
        bindings = <&mo>, <&caps_word>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        flavor = "tap-preferred";
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp PRINTSCREEN  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)    &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(NUMBER_5)    &kp LG(UP)           &kp LG(NUMBER_6)  &kp LG(NUMBER_7)   &kp LS(LA(LC(N)))  &kp RA(RS(RC(H)))    &kp RA(ESC)    &kp RA(F4)
&kp LC(X)        &kp Q             &kp L               &kp U             &kp COMMA         &kp PERIOD          &kp LG(DOWN)         &kp F             &kp W              &kp R              &kp Y                &kp P          &kp DELETE
&kp LC(C)        &kp E             &mt LEFT_CONTROL I  &mt LEFT_ALT A    &mt LEFT_SHIFT O  &kp MINUS           &kp LG(LEFT_ARROW)   &kp K             &mt RIGHT_SHIFT T  &mt RIGHT_ALT N    &mt RIGHT_CONTROL S  &kp H          &kp RS(ENTER)
&kp LC(V)        &kp Z             &kp X               &kp C             &kp V             &kp F6              &kp LG(RIGHT_ARROW)  &kp G             &kp D              &kp M              &kp J                &kp B          &kp RIGHT_SHIFT
&kp LC(C_MUTE)   &kp LEFT_GUI      &kp TAB             &kp ESCAPE        &kp BACKSPACE     &lt 1 ENTER         &kp LG(D)            &lt 2 SPACE       &lt 3 F17          &kp F15            &kp F14              &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&trans          &trans                &trans                     &trans           &trans                   &trans                   &mmv MOVE_UP     &trans           &trans                     &trans                 &trans                          &trans      &trans
&trans          &kp LEFT_PARENTHESIS  &kp NUMBER_1               &kp NUMBER_2     &kp NUMBER_3             &kp RIGHT_PARENTHESIS    &mmv MOVE_DOWN   &kp BACKSLASH    &kp SLASH                  &kp ASTERISK           &kp TILDE                       &kp DOLLAR  &trans
&kp LG(V)       &kp LEFT_BRACKET      &mt LEFT_CONTROL NUMBER_4  &mt LEFT_ALT N5  &mt LEFT_SHIFT NUMBER_6  &kp RIGHT_BRACKET        &mmv MOVE_LEFT   &kp AMPERSAND    &mt RIGHT_SHIFT LESS_THAN  &mt RIGHT_ALT PERCENT  &mt RIGHT_CONTROL GREATER_THAN  &kp HASH    &trans
&trans          &kp COLON             &kp N7                     &kp N8           &kp N9                   &kp N0                   &mmv MOVE_RIGHT  &kp EXCLAMATION  &kp QUESTION               &kp PLUS               &kp MINUS                       &kp EQUAL   &trans
&kp LC(C_MUTE)  &trans                &trans                     &trans           &trans                   &trans                   &mkp LCLK        &kp TAB          &kp RC(Z)                  &kp RS(RC(Z))          &trans                          &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans     &trans                &trans                 &trans                   &trans                &trans                   &mmv MOVE_UP     &trans           &trans          &trans          &trans           &trans     &trans
&trans     &kp LEFT_PARENTHESIS  &kp LEFT_BRACE         &kp AT_SIGN              &kp RIGHT_BRACE       &kp RIGHT_PARENTHESIS    &mmv MOVE_DOWN   &kp PAGE_UP      &kp SLASH       &kp UP_ARROW    &kp TILDE        &kp HOME   &trans
&trans     &kp LEFT_BRACKET      &mt LEFT_CONTROL PIPE  &mt LEFT_ALT UNDERSCORE  &mt LEFT_SHIFT GRAVE  &kp RIGHT_BRACKET        &mmv MOVE_LEFT   &kp PAGE_DOWN    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END    &trans
&trans     &kp SEMICOLON         &kp CARET              &kp SQT                  &kp DOUBLE_QUOTES     &trans                   &mmv MOVE_RIGHT  &kp EXCLAMATION  &kp QUESTION    &kp PLUS        &kp MINUS        &kp EQUAL  &trans
&kp LC(K)  &trans                &trans                 &kp LC(S)                &kp CAPS              &caps_word               &mkp LCLK        &trans           &trans          &trans          &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp PAGE_DOWN PAGE_UP>;
        };

        layer_3 {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR  &bt BT_CLR_ALL    &rgb_ug RGB_HUI  &sys_reset       &trans           &trans                       &trans                                  &trans                &trans
&kp K_CALC    &kp F1        &kp F2        &kp F3        &kp F4      &kp F5            &rgb_ug RGB_HUD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &kp C_VOL_UP                 &kp C_MUTE                              &kp C_BRIGHTNESS_INC  &trans
&trans        &kp F6        &kp F7        &kp F8        &kp F9      &kp F10           &rgb_ug RGB_SAI  &rgb_ug RGB_BRD  &kp RIGHT_SHIFT  &mt RIGHT_ALT C_VOLUME_DOWN  &mt RIGHT_CONTROL C_BRIGHTNESS_MINIMUM  &kp C_BRIGHTNESS_DEC  &trans
&trans        &kp F11       &kp F12       &trans        &trans      &trans            &rgb_ug RGB_SAD  &trans           &rgb_ug RGB_SPI  &kp C_PREV                   &kp C_PLAY_PAUSE                        &kp C_NEXT            &trans
&trans        &trans        &trans        &trans        &trans      &trans            &rgb_ug RGB_TOG  &trans           &trans           &rgb_ug RGB_SPD              &trans                                  &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
